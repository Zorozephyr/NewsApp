spring:
  application:
    name: ai-summarization-service

  data:
    mongodb:
      host: localhost
      port: 27017
      database: NewsAppDB
      auto-index-creation: true

  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: 1
      retries: 3
      batch-size: 16384
      buffer-memory: 33554432
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      group-id: news-group
      auto-offset-reset: earliest
      properties:
        spring.json.trusted.packages: "*"
        spring.json.type.mapping: "com.project.newsprocessor.dto.NewsEvent:com.project.ai_summarization_service.dto.NewsEvent"

server:
  port: 8090

logging:
  level:
    com.project.ai_summarization_service: INFO
    org.springframework.kafka.listener: INFO
    org.springframework.kafka.support.serializer: DEBUG
    # Reduce noise from network-level Kafka logs
    org.apache.kafka.clients.NetworkClient: WARN
    org.apache.kafka.clients.consumer.internals: WARN
    org.apache.kafka: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

gemini:
  api:
    key: AIzaSyD2b5GtBCI0RlNXA0o7J9ukXBRWpnw3g_8
    url:
    model: gemini-2.0-flash